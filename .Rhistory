getwd()
p_less_9 <- pnorm(9,mena=10,sd=3)
p_less_9 <- pnorm(9,mean=10,sd=3)
p_less_9
p_5_20 <- pnorm(20,mean=10,sd=3) - pnorm(5,mean=10,sd=3)
p_5_20
q_075 <- qnorm(0.75,mean=10,sd=3)
q_075
x <- rnorm(n=1000, mean=10, sd=3)
x_p_less_9 <- sum(x<=9)/length(x)
x_p_less_
x_p_less_0
x_p_less_9
x_p_5_20    <- sum(x<=20 & x>=5)/length(x)
x_q_075     <- quantile(x,0.75)
x_q_075
?data.frame
ls()
clear
set.seed(600)     # set a random seed for reproducibility of results
data <- rpois(n=150,20)
poisson_loglikelihood <- function(lambda,x)
{
n    <-length(x)                # n is the sample size
llik <- -n*lambda+sum(x*log(lambda))-sum(log(factorial(x)))
return(llik)
}
maximisation <- optimize(poisson_loglikelihood,
interval=c(1,50),x=data,maximum=TRUE)
maximisation
set.seed(400)
mle <- NULL
for (i in 1:5000)
{
x      <- rpois(n=150,20)
mle[i] <- mean(x)
}
m <- mean(mle)
v <- var(mle)
c(m,v)
hist(mle,xlab=expression(hat(lambda)),freq=FALSE)
abline(v=m,col=2, lty=2,lwd=2)
# Add the line of a normal curve with mean=20, sigma=0.134
z <- seq(18,22,length=1000)
lines(z,dnorm(z, 20, sqrt(0.134)),col=4)
c(quantile(mle,0.025), quantile(mle,0.975) )
abline(v=quantile(mle,0.975),col=2,lty=2,lwd=2)
abline(v=quantile(mle,0.025),col=2,lty=2,lwd=2)
##################################
# Data Analysis: 0+1*3^(2^64).csv
##################################
data = read.table('0+1*3^(2^64).csv', header=T, sep=',') # reads data
setwd("~/Documents/GitHub/EquSLP")
##################################
# Data Analysis: 0+1*3^(2^64).csv
##################################
data = read.table('0+1*3^(2^64).csv', header=T, sep=',') # reads data
# Define the position of tick marks
v1 <- c(8,12,16,20,24,28,32)
# Define the labels of tick marks
v2 <- c("8","12","16","20","24","28","32")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,0.8),
main = "Number of Bits of Random Component against the Probability of Failure",
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,1),
main = "Number of Bits of Random Component against the Probability of Failure",
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
#ylim =c(0,1),
main = "Number of Bits of Random Component against the Probability of Failure",
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
paste('0+1*',2,'^(2^64).csv')
paste('0+1*', 2, '^(2^64).csv', sep = "")
##################################
# Data Analysis: 0+1*2^(2^64).csv
##################################
for (i in c(2)){
data = read.table(paste('0+1*', i, '^(2^64).csv', sep = ""), header=T, sep=',') # reads data
# Define the position of tick marks
v1 <- c(8,12,16,20,24,28,32)
# Define the labels of tick marks
v2 <- c("8","12","16","20","24","28","32")
jpeg(paste('0+1*', i, '^(2^64).jpg', sep = ""))
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,0.8),
main = "Number of Bits of Random Component against the Probability of Failure",
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Add an axis to the plot
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
# Add reference line
abline(h=0.00,col="green")
par(new=T) # superpose plots
# Mean Data
meandata = aggregate(data[, 4], list(data$bits), mean)
# Create the plot
plot(x = meandata[,1],
y =  meandata[,2],
type="o",
pch=15,
xaxt = "n",
yaxt = "n",
col="red",
xlim =c(8,32),
ylim =c(0,0.8),
main = "",
xlab ="",
ylab ="")
# Add Legend
legend("topright", legend=c("Average Probability", "Probability = 0"), col=c("red", "green"), lty=1:1, cex=1)
dev.off()
}
##################################
# Data Analysis: 0+1*2^(2^64).csv
##################################
for (i in c(2)){
data = read.table(paste('0+1*', i, '^(2^64).csv', sep = ""), header=T, sep=',') # reads data
# Define the position of tick marks
v1 <- c(8,12,16,20,24,28,32)
# Define the labels of tick marks
v2 <- c("8","12","16","20","24","28","32")
jpeg(file=paste('0+1*', i, '^(2^64).jpg', sep = ""),
res=600, width=4800, height=4800, pointsize=10,
type="windows", antialias="cleartype")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,0.8),
main = "Number of Bits of Random Component against the Probability of Failure",
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Add an axis to the plot
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
# Add reference line
abline(h=0.00,col="green")
par(new=T) # superpose plots
# Mean Data
meandata = aggregate(data[, 4], list(data$bits), mean)
# Create the plot
plot(x = meandata[,1],
y =  meandata[,2],
type="o",
pch=15,
xaxt = "n",
yaxt = "n",
col="red",
xlim =c(8,32),
ylim =c(0,0.8),
main = "",
xlab ="",
ylab ="")
# Add Legend
legend("topright", legend=c("Average Probability", "Probability = 0"), col=c("red", "green"), lty=1:1, cex=1)
dev.off()
}
##################################
# Data Analysis: 0+1*2^(2^64).csv
##################################
for (i in c(2)){
data = read.table(paste('0+1*', i, '^(2^64).csv', sep = ""), header=T, sep=',') # reads data
# Define the position of tick marks
v1 <- c(8,12,16,20,24,28,32)
# Define the labels of tick marks
v2 <- c("8","12","16","20","24","28","32")
jpeg(file=paste('0+1*', i, '^(2^64).jpg', sep = ""),
res=600, width=4800, height=4800)
#, pointsize=10, type="windows", antialias="cleartype")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,0.8),
main = "Number of Bits of Random Component against the Probability of Failure",
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Add an axis to the plot
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
# Add reference line
abline(h=0.00,col="green")
par(new=T) # superpose plots
# Mean Data
meandata = aggregate(data[, 4], list(data$bits), mean)
# Create the plot
plot(x = meandata[,1],
y =  meandata[,2],
type="o",
pch=15,
xaxt = "n",
yaxt = "n",
col="red",
xlim =c(8,32),
ylim =c(0,0.8),
main = "",
xlab ="",
ylab ="")
# Add Legend
legend("topright", legend=c("Average Probability", "Probability = 0"), col=c("red", "green"), lty=1:1, cex=1)
dev.off()
}
##################################
# Data Analysis: 0+1*2^(2^64).csv
##################################
for (i in c(2,3,5)){
data = read.table(paste('0+1*', i, '^(2^64).csv', sep = ""), header=T, sep=',') # reads data
# Define the position of tick marks
v1 <- c(8,12,16,20,24,28,32)
# Define the labels of tick marks
v2 <- c("8","12","16","20","24","28","32")
jpeg(file=paste('0+1*', i, '^(2^64).jpg', sep = ""),
res=600, width=4800, height=4800)
#, pointsize=10, type="windows", antialias="cleartype")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,0.8),
main = "Number of Bits of Random Component against the Probability of Failure",
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Add an axis to the plot
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
# Add reference line
abline(h=0.00,col="green")
par(new=T) # superpose plots
# Mean Data
meandata = aggregate(data[, 4], list(data$bits), mean)
# Create the plot
plot(x = meandata[,1],
y =  meandata[,2],
type="o",
pch=15,
xaxt = "n",
yaxt = "n",
col="red",
xlim =c(8,32),
ylim =c(0,0.8),
main = "",
xlab ="",
ylab ="")
# Add Legend
legend("topright", legend=c("Average Probability", "Probability = 0"), col=c("red", "green"), lty=1:1, cex=1)
dev.off()
}
##################################
# Data Analysis: 0+1*2^(2^64).csv
##################################
for (i in c(2,3,5)){
data = read.table(paste('0+1*', i, '^(2^64).csv', sep = ""), header=T, sep=',') # reads data
# Define the position of tick marks
v1 <- c(8,12,16,20,24,28,32)
# Define the labels of tick marks
v2 <- c("8","12","16","20","24","28","32")
jpeg(file=paste('0+1*', i, '^(2^64).jpg', sep = ""),
res=600, width=4800, height=4800)
#, pointsize=10, type="windows", antialias="cleartype")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,0.8),
main = "Number of Bits of Random Component against the Probability of Failure",
sub = paste('0+1*', i, '^(2^64)', sep = ""),
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Add an axis to the plot
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
# Add reference line
abline(h=0.00,col="green")
par(new=T) # superpose plots
# Mean Data
meandata = aggregate(data[, 4], list(data$bits), mean)
# Create the plot
plot(x = meandata[,1],
y =  meandata[,2],
type="o",
pch=15,
xaxt = "n",
yaxt = "n",
col="red",
xlim =c(8,32),
ylim =c(0,0.8),
main = "",
xlab ="",
ylab ="")
# Add Legend
legend("topright", legend=c("Average Probability", "Probability = 0"), col=c("red", "green"), lty=1:1, cex=1)
dev.off()
}
##################################
# Data Analysis: 0+1*2^(2^64).csv
##################################
for (i in c(2,3,5)){
data = read.table(paste('0+1*', i, '^(2^64).csv', sep = ""), header=T, sep=',') # reads data
# Define the position of tick marks
v1 <- c(8,12,16,20,24,28,32)
# Define the labels of tick marks
v2 <- c("8","12","16","20","24","28","32")
jpeg(file=paste('0+1*', i, '^(2^64).jpg', sep = ""),
res=600, width=4800, height=4800)
#, pointsize=10, type="windows", antialias="cleartype")
# Create the plot
plot(x = data$bits,
y = data$proba,
col = gray(.4, .4),
pch = 16,
xaxt = "n",
xlim =c(8,32),
ylim =c(0,0.8),
main = "Number of Bits of Random Component against the Probability of Failure",
sub = paste('0+1*', i, '^(2^64)', sep = ""),
xlab ="Number of Bits of Random Component",
ylab ="Probability of Failure")
# Add an axis to the plot
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
# Add reference line
abline(h=0.00,col="green")
par(new=T) # superpose plots
# Mean Data
meandata = aggregate(data[, 4], list(data$bits), mean)
# Create the plot
plot(x = meandata[,1],
y =  meandata[,2],
type="o",
pch=15,
xaxt = "n",
yaxt = "n",
col="red",
xlim =c(8,32),
ylim =c(0,0.8),
main = "",
xlab ="",
ylab ="")
# Add Legend
legend("topright", legend=c("Average Probability", "Probability = 0"), col=c("red", "green"), lty=1:1, cex=1)
dev.off()
}
