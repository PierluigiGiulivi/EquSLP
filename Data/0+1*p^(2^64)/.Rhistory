getwd()
p_less_9 <- pnorm(9,mena=10,sd=3)
p_less_9 <- pnorm(9,mean=10,sd=3)
p_less_9
p_5_20 <- pnorm(20,mean=10,sd=3) - pnorm(5,mean=10,sd=3)
p_5_20
q_075 <- qnorm(0.75,mean=10,sd=3)
q_075
x <- rnorm(n=1000, mean=10, sd=3)
x_p_less_9 <- sum(x<=9)/length(x)
x_p_less_
x_p_less_0
x_p_less_9
x_p_5_20    <- sum(x<=20 & x>=5)/length(x)
x_q_075     <- quantile(x,0.75)
x_q_075
?data.frame
ls()
clear
set.seed(600)     # set a random seed for reproducibility of results
data <- rpois(n=150,20)
poisson_loglikelihood <- function(lambda,x)
{
n    <-length(x)                # n is the sample size
llik <- -n*lambda+sum(x*log(lambda))-sum(log(factorial(x)))
return(llik)
}
maximisation <- optimize(poisson_loglikelihood,
interval=c(1,50),x=data,maximum=TRUE)
maximisation
set.seed(400)
mle <- NULL
for (i in 1:5000)
{
x      <- rpois(n=150,20)
mle[i] <- mean(x)
}
m <- mean(mle)
v <- var(mle)
c(m,v)
hist(mle,xlab=expression(hat(lambda)),freq=FALSE)
abline(v=m,col=2, lty=2,lwd=2)
# Add the line of a normal curve with mean=20, sigma=0.134
z <- seq(18,22,length=1000)
lines(z,dnorm(z, 20, sqrt(0.134)),col=4)
c(quantile(mle,0.025), quantile(mle,0.975) )
abline(v=quantile(mle,0.975),col=2,lty=2,lwd=2)
abline(v=quantile(mle,0.025),col=2,lty=2,lwd=2)
setwd("~/Documents/GitHub/EquSLP/Data/0+1*p^(2^64)")
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
summary(data0)
sizediff = data0$lenX - data0$lenY
head(sizediff)
sizediff
data0
plot(sizediff, data0$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
data
sizediff = data$lenX - data0$lenY
plot(sizediff, data0$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
sizediff = data$lenX - data$lenY
plot(sizediff, data0$proba)
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
head(data)
summary(sizediff)
data
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
data = data0[data0$lenX == 66,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
data = data[data$lenX == 66,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
data = data[data$lenX == 66,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
data = data[data$lenX == 66,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
data = data[data$lenX == 66,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data = data0[data0$bits == 32,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data = data0[data0$bits == 16,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 16,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data = data0[data0$bits == 8,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
data = data[data$lenX == 66,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
maxproba = aggregate(proba~bits, data0, max)
data = data0[data0$proba == maxproba$proba,]
data = data[order(data$proba),]
data
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
data = data[data$lenX == 66,]
data = data[data$lenY == 6,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
data = data[data$lenX == 66,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data[data$lenX == 66,]
data = data[data$lenY == 6,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$lenX == 66,]
data = data[data$lenY == 6,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data[data$lenX - data$lenY == 60,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data[data$bits == 8,]
data = data[data$lenX - data$lenY == 60,]
sizediff = data$lenX - data$lenY
plot(sizediff, data$proba)
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
maxproba = aggregate(proba~bits, data0, max)
data = data0[data0$proba == maxproba$proba,]
data = data[order(data$proba),]
data
0.808 * 8
6/8
6/9
7/8
7/9
7/10
7/11
7/12
data$"6.5/b" = 6.5/data$bits
data
0.012*32
data$"0.384/b" = 0.384/data$bits
data
meandata = aggregate(proba~bits, data0, mean)
meandata
0.2335104167 * 8
0.0002366071 * 32
meandata$coeff = meandta$bits * meandata$proba
m
meandata$coeff = meandata$bits * meandata$proba
meandata
meandata = aggregate(proba~bits, data0, mean)
meandata$"coeff/b" = mean(meandata$bits * meandata$proba) / meandata$bits
meandata
meandata = aggregate(proba~bits, data0, mean)
meandata$"1/exp(b)" = 1/exp(meandata$bits)
meandata
meandata$"1/exp(b)" = 1/exp(meandata$bits**2)
meandata
meandata$"1/exp(b)" = meandata$bits**2/exp(meandata$bits2)
meandata
meandata$"1/exp(b)" = (meandata$bits**2)/(exp(meandata$bits2))
meandata = aggregate(proba~bits, data0, mean)
meandata$"1/exp(b)" = meandata$bits**2 / exp(meandata$bits)
meandata
meandata$"1/exp(b)" = meandata$bits**meandata$bits / exp(meandata$bits)
meandata
meandata = aggregate(proba~bits, data0, mean)
meandata$"coeff/b" = mean(meandata$bits * meandata$proba) / meandata$bits
meandata$"1/exp(b)" = meandata$bits / exp(meandata$bits)
meandata
install.packages("mosaic")
library(mosaic)
f = fitModel(proba~A/bits, data = meandata)
install.packages("mosaic")
library(mosaic)
remove.packages("mosaic")
remove.packages("mosaicCore")
remove.packages("mosaicData")
install.packages("mosaic")
remove.packages("mosaicData")
remove.packages("mosaicCore")
install.packages("mosaic")
library(mosaic)
library(mosaic)
library(mosaicCore)
library(mosaicData)
f = fitModel(proba~A/bits, data = meandata)
remove.packages("mosaicData")
remove.packages("mosaicCore")
remove.packages("mosaic")
