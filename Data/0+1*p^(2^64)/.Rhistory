getwd()
p_less_9 <- pnorm(9,mena=10,sd=3)
p_less_9 <- pnorm(9,mean=10,sd=3)
p_less_9
p_5_20 <- pnorm(20,mean=10,sd=3) - pnorm(5,mean=10,sd=3)
p_5_20
q_075 <- qnorm(0.75,mean=10,sd=3)
q_075
x <- rnorm(n=1000, mean=10, sd=3)
x_p_less_9 <- sum(x<=9)/length(x)
x_p_less_
x_p_less_0
x_p_less_9
x_p_5_20    <- sum(x<=20 & x>=5)/length(x)
x_q_075     <- quantile(x,0.75)
x_q_075
?data.frame
ls()
clear
set.seed(600)     # set a random seed for reproducibility of results
data <- rpois(n=150,20)
poisson_loglikelihood <- function(lambda,x)
{
n    <-length(x)                # n is the sample size
llik <- -n*lambda+sum(x*log(lambda))-sum(log(factorial(x)))
return(llik)
}
maximisation <- optimize(poisson_loglikelihood,
interval=c(1,50),x=data,maximum=TRUE)
maximisation
set.seed(400)
mle <- NULL
for (i in 1:5000)
{
x      <- rpois(n=150,20)
mle[i] <- mean(x)
}
m <- mean(mle)
v <- var(mle)
c(m,v)
hist(mle,xlab=expression(hat(lambda)),freq=FALSE)
abline(v=m,col=2, lty=2,lwd=2)
# Add the line of a normal curve with mean=20, sigma=0.134
z <- seq(18,22,length=1000)
lines(z,dnorm(z, 20, sqrt(0.134)),col=4)
c(quantile(mle,0.025), quantile(mle,0.975) )
abline(v=quantile(mle,0.975),col=2,lty=2,lwd=2)
abline(v=quantile(mle,0.025),col=2,lty=2,lwd=2)
setwd("~/Documents/GitHub/EquSLP/Data/0+1*p^(2^64)")
###########################################
# Worse Case Scenario: 0+1*prime^(2^64).csv
###########################################
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
# Mean Data
meandata = aggregate(proba~bits, data0, mean)
meandata
sddata = aggregate(proba~bits, data, sd)
sddata = aggregate(proba~bits, data0, sd)
sddata
dnorm(data0$bits == 8, 0.2335104167, 0.1953497795)
plot(dnorm(data0$bits == 8, 0.2335104167, 0.1953497795))
x = data0$nits == 8
y = dnorm(x, meandata$bits == 8, sddata$bits == 8)
plot(x,y)
sumarry(x)
summary(x)
x = data0$bits == 8
y = dnorm(x, meandata$bits == 8, sddata$bits == 8)
plot(x,y)
x = data0$bits == 8
x
x = [data0$age <= df$laclen, ]
x = [data0$bits == 8, ]
data = data0[data0$bits == 8,]
data
sddata$bits == 8
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
x = data$proba
aggregate(proba~bits, data, mean)
aggregate(proba~bits, data, mean)$proba
y = dnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
x = data$proba
y = dnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 16,]
x = data$proba
y = dnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
x = data$proba
y = dnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
x = data$proba
y = dnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 16,]
x = data$proba
y = dnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
abline(v = aggregate(proba~bits, data, mean)$proba + aggregate(proba~bits, data, sd)$proba)
abline(v = aggregate(proba~bits, data, mean)$proba - aggregate(proba~bits, data, sd)$proba)
aggregate(proba~bits, data, mean)$proba
aggregate(proba~bits, data, sd)$proba
hist(x)
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
abline(v = aggregate(proba~bits, data, mean)$proba + aggregate(proba~bits, data, sd)$proba)
hist(x)
data = data0[data0$bits == 32,]
x = data$proba
hist(x)
data = data0[data0$bits == 8,]
x = data$proba
hist(x)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 8,]
x = data$proba
y = qnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
data = data0[data0$bits == 32,]
x = data$proba
y = qnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 32,]
x = data$proba
x
head(data)
y = dnorm(x, aggregate(proba~bits, data, mean)$proba, aggregate(proba~bits, data, sd)$proba)
y
mean(data$proba)
sd(data$proba)
###############
data0 = read.table(paste('0+1*', 2, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 16,]
x = data$proba
y = dnorm(x, mean(data$proba), sd(data$proba))
plot(x,y)
abline(v = aggregate(proba~bits, data, mean)$proba)
abline(v = aggregate(proba~bits, data, mean)$proba + aggregate(proba~bits, data, sd)$proba)
abline(v = mean(data$proba) - sd(data$proba))
###############
data0 = read.table(paste('0+1*', 3, '^(2^64).csv', sep = ""),
header=T, sep=',')
data = data0[data0$bits == 16,]
x = data$proba
y = dnorm(x, mean(data$proba), sd(data$proba))
plot(x,y)
abline(v = mean(data$proba))
abline(v = mean(data$proba) + sd(data$proba))
abline(v = mean(data$proba) - sd(data$proba))
